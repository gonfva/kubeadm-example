- name: Create a new VPC
  ec2_vpc_net:
    name: Kubeadm_vpc
    state: present
    cidr_block: "10.144.0.0/16"
    resource_tags:
      Name: k8s-vpc
    region: eu-west-1
  register: vpc

- name: Create a new Subnet
  ec2_vpc_subnet:
    state: present
    vpc_id: "{{ vpc.vpc.id }}"
    cidr: 10.144.0.0/18
    tags:
      Name: Kubeadm_subnet
  register: subnet

- name: Create a new IGW
  ec2_vpc_igw:
    vpc_id: "{{ vpc.vpc.id }}"
    state: present
    tags:
      name: Kubeadm_IGW
  register: igw

- name: Set up the route table
  ec2_vpc_route_table:
    vpc_id: "{{ vpc.vpc.id }}"
    tags:
      Name: Kubeadm_route_table_Public
    subnets:
      - "{{ subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
  register: public_route_table

- name: get my public IP
  ipify_facts:

- name: Create a new security group
  ec2_group:
    name: K8s security group
    description: It allows ports 22, 30000 and 443 in and 80 and 443 out
    vpc_id: "{{vpc.vpc.id}}"
    region: eu-west-1
    rules:
      - proto: tcp
        from_port: 30000
        to_port: 30000
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: "{{ipify_public_ip}}/32"
      - proto: all
        group_name: K8s security group
    rules_egress:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: all
        group_name: K8s security group

- name: Create instances
  ec2:
    region: eu-west-1
    key_name: k8s-keypair
    instance_type: t3.small
    image: ami-0f6ac851567cee28d #CHANGEME
    wait: yes
    group: "K8s security group"
    vpc_subnet_id: "{{ subnet.subnet.id }}"
    assign_public_ip: yes
    instance_tags:
      Name: k8sserver
    count_tag:
      Name: k8sserver
    exact_count: 3
  register: ec2

- name: Get instances
  set_fact:
    instances: "{{ ec2.tagged_instances | sort(attribute='public_ip') }}"

- name: Add new instance to master group
  add_host:
    hostname: "{{ instances[0].public_ip }}"
    private_ip: "{{instances[0].private_ip}}"
    id: "{{instances[0].id}}"
    groups:
      - master
      - launched

- name: Add new instance to minions group
  add_host:
    hostname: "{{ item.public_ip }}"
    private_ip: "{{item.private_ip}}"
    id: "{{item.id}}"
    groups:
      - minions
      - launched
  with_items: "{{instances[1:]}}"

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_dns_name }}"
    port: 22
    timeout: 480
    state: started
  with_items: "{{instances}}"
